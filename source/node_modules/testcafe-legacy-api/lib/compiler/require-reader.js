'use strict';

exports.__esModule = true;

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _pinkie = require('pinkie');

var _pinkie2 = _interopRequireDefault(_pinkie);

var _require_analyzer = require('./legacy/analysis/require_analyzer');

var _require_analyzer2 = _interopRequireDefault(_require_analyzer);

var _arrayRemove = require('../utils/array-remove');

var _arrayRemove2 = _interopRequireDefault(_arrayRemove);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class RequireReader {
    constructor(descriptorsCache, hammerheadProcessScript) {
        this.descriptorsCache = descriptorsCache || {};
        this.readings = [];
        this.waiters = {};
        this.hammerheadProcessScript = hammerheadProcessScript;
    }

    _analyzeRequire(require, filename, sourceIndex) {
        var _this = this;

        return (0, _asyncToGenerator3.default)(function* () {
            _this.readings.push(require);

            return new _pinkie2.default(function (resolve) {
                _require_analyzer2.default.run(require, filename, sourceIndex, _this.hammerheadProcessScript, function (errs, descriptor) {
                    _this.descriptorsCache[require] = descriptor;

                    (0, _arrayRemove2.default)(_this.readings, require);
                    resolve({ errs, descriptor });

                    if (_this.waiters[require]) {
                        _this.waiters[require].forEach(function (waiter) {
                            return waiter(descriptor);
                        });
                        _this.waiters[require] = null;
                    }
                });
            });
        })();
    }

    _waitForReading(require) {
        var _this2 = this;

        return (0, _asyncToGenerator3.default)(function* () {
            return new _pinkie2.default(function (resolve) {
                if (!_this2.waiters[require]) _this2.waiters[require] = [];

                _this2.waiters[require].push(function (descriptor) {
                    return resolve({ descriptor, fromCache: true });
                });
            });
        })();
    }

    read(require, filename, sourceIndex) {
        var _this3 = this;

        return (0, _asyncToGenerator3.default)(function* () {
            if (_this3.descriptorsCache[require]) {
                return {
                    descriptor: _this3.descriptorsCache[require],
                    fromCache: true
                };
            }

            if (_this3.readings.indexOf(require) > -1) return yield _this3._waitForReading(require);

            return _this3._analyzeRequire(require, filename, sourceIndex);
        })();
    }
}
exports.default = RequireReader;
module.exports = exports['default'];