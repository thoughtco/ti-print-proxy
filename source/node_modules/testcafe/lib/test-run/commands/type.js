"use strict";
// -------------------------------------------------------------
// WARNING: this file is used by both the client and the server.
// Do not use any browser or node-specific API!
// -------------------------------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = {
    click: 'click',
    rightClick: 'right-click',
    doubleClick: 'double-click',
    drag: 'drag',
    dragToElement: 'drag-to-element',
    hover: 'hover',
    typeText: 'type-text',
    selectText: 'select-text',
    selectTextAreaContent: 'select-text-area-content',
    selectEditableContent: 'select-editable-content',
    pressKey: 'press-key',
    wait: 'wait',
    navigateTo: 'navigate-to',
    setFilesToUpload: 'set-files-to-upload',
    clearUpload: 'clear-upload',
    executeClientFunction: 'execute-client-function',
    executeSelector: 'execute-selector',
    takeScreenshot: 'take-screenshot',
    takeElementScreenshot: 'take-element-screenshot',
    takeScreenshotOnFail: 'take-screenshot-on-fail',
    prepareBrowserManipulation: 'prepare-browser-manipulation',
    showAssertionRetriesStatus: 'show-assertion-retries-status',
    hideAssertionRetriesStatus: 'hide-assertion-retries-status',
    setBreakpoint: 'set-breakpoint',
    resizeWindow: 'resize-window',
    resizeWindowToFitDevice: 'resize-window-to-fit-device',
    maximizeWindow: 'maximize-window',
    switchToIframe: 'switch-to-iframe',
    switchToMainWindow: 'switch-to-main-window',
    setNativeDialogHandler: 'set-native-dialog-handler',
    getNativeDialogHistory: 'get-native-dialog-history',
    getBrowserConsoleMessages: 'get-browser-console-messages',
    setTestSpeed: 'set-test-speed',
    setPageLoadTimeout: 'set-page-load-timeout',
    debug: 'debug',
    assertion: 'assertion',
    useRole: 'useRole',
    testDone: 'test-done',
    backupStorages: 'backup-storages',
    executeExpression: 'execute-expression',
    executeAsyncExpression: 'execute-async-expression',
    unlockPage: 'unlock-page',
    recorder: 'recorder'
};
module.exports = exports.default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90ZXN0LXJ1bi9jb21tYW5kcy90eXBlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxnRUFBZ0U7QUFDaEUsZ0VBQWdFO0FBQ2hFLCtDQUErQztBQUMvQyxnRUFBZ0U7O0FBRWhFLGtCQUFlO0lBQ1gsS0FBSyxFQUF1QixPQUFPO0lBQ25DLFVBQVUsRUFBa0IsYUFBYTtJQUN6QyxXQUFXLEVBQWlCLGNBQWM7SUFDMUMsSUFBSSxFQUF3QixNQUFNO0lBQ2xDLGFBQWEsRUFBZSxpQkFBaUI7SUFDN0MsS0FBSyxFQUF1QixPQUFPO0lBQ25DLFFBQVEsRUFBb0IsV0FBVztJQUN2QyxVQUFVLEVBQWtCLGFBQWE7SUFDekMscUJBQXFCLEVBQU8sMEJBQTBCO0lBQ3RELHFCQUFxQixFQUFPLHlCQUF5QjtJQUNyRCxRQUFRLEVBQW9CLFdBQVc7SUFDdkMsSUFBSSxFQUF3QixNQUFNO0lBQ2xDLFVBQVUsRUFBa0IsYUFBYTtJQUN6QyxnQkFBZ0IsRUFBWSxxQkFBcUI7SUFDakQsV0FBVyxFQUFpQixjQUFjO0lBQzFDLHFCQUFxQixFQUFPLHlCQUF5QjtJQUNyRCxlQUFlLEVBQWEsa0JBQWtCO0lBQzlDLGNBQWMsRUFBYyxpQkFBaUI7SUFDN0MscUJBQXFCLEVBQU8seUJBQXlCO0lBQ3JELG9CQUFvQixFQUFRLHlCQUF5QjtJQUNyRCwwQkFBMEIsRUFBRSw4QkFBOEI7SUFDMUQsMEJBQTBCLEVBQUUsK0JBQStCO0lBQzNELDBCQUEwQixFQUFFLCtCQUErQjtJQUMzRCxhQUFhLEVBQWUsZ0JBQWdCO0lBQzVDLFlBQVksRUFBZ0IsZUFBZTtJQUMzQyx1QkFBdUIsRUFBSyw2QkFBNkI7SUFDekQsY0FBYyxFQUFjLGlCQUFpQjtJQUM3QyxjQUFjLEVBQWMsa0JBQWtCO0lBQzlDLGtCQUFrQixFQUFVLHVCQUF1QjtJQUNuRCxzQkFBc0IsRUFBTSwyQkFBMkI7SUFDdkQsc0JBQXNCLEVBQU0sMkJBQTJCO0lBQ3ZELHlCQUF5QixFQUFHLDhCQUE4QjtJQUMxRCxZQUFZLEVBQWdCLGdCQUFnQjtJQUM1QyxrQkFBa0IsRUFBVSx1QkFBdUI7SUFDbkQsS0FBSyxFQUF1QixPQUFPO0lBQ25DLFNBQVMsRUFBbUIsV0FBVztJQUN2QyxPQUFPLEVBQXFCLFNBQVM7SUFDckMsUUFBUSxFQUFvQixXQUFXO0lBQ3ZDLGNBQWMsRUFBYyxpQkFBaUI7SUFDN0MsaUJBQWlCLEVBQVcsb0JBQW9CO0lBQ2hELHNCQUFzQixFQUFNLDBCQUEwQjtJQUN0RCxVQUFVLEVBQWtCLGFBQWE7SUFDekMsUUFBUSxFQUFvQixVQUFVO0NBQ3pDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBXQVJOSU5HOiB0aGlzIGZpbGUgaXMgdXNlZCBieSBib3RoIHRoZSBjbGllbnQgYW5kIHRoZSBzZXJ2ZXIuXG4vLyBEbyBub3QgdXNlIGFueSBicm93c2VyIG9yIG5vZGUtc3BlY2lmaWMgQVBJIVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgY2xpY2s6ICAgICAgICAgICAgICAgICAgICAgICdjbGljaycsXG4gICAgcmlnaHRDbGljazogICAgICAgICAgICAgICAgICdyaWdodC1jbGljaycsXG4gICAgZG91YmxlQ2xpY2s6ICAgICAgICAgICAgICAgICdkb3VibGUtY2xpY2snLFxuICAgIGRyYWc6ICAgICAgICAgICAgICAgICAgICAgICAnZHJhZycsXG4gICAgZHJhZ1RvRWxlbWVudDogICAgICAgICAgICAgICdkcmFnLXRvLWVsZW1lbnQnLFxuICAgIGhvdmVyOiAgICAgICAgICAgICAgICAgICAgICAnaG92ZXInLFxuICAgIHR5cGVUZXh0OiAgICAgICAgICAgICAgICAgICAndHlwZS10ZXh0JyxcbiAgICBzZWxlY3RUZXh0OiAgICAgICAgICAgICAgICAgJ3NlbGVjdC10ZXh0JyxcbiAgICBzZWxlY3RUZXh0QXJlYUNvbnRlbnQ6ICAgICAgJ3NlbGVjdC10ZXh0LWFyZWEtY29udGVudCcsXG4gICAgc2VsZWN0RWRpdGFibGVDb250ZW50OiAgICAgICdzZWxlY3QtZWRpdGFibGUtY29udGVudCcsXG4gICAgcHJlc3NLZXk6ICAgICAgICAgICAgICAgICAgICdwcmVzcy1rZXknLFxuICAgIHdhaXQ6ICAgICAgICAgICAgICAgICAgICAgICAnd2FpdCcsXG4gICAgbmF2aWdhdGVUbzogICAgICAgICAgICAgICAgICduYXZpZ2F0ZS10bycsXG4gICAgc2V0RmlsZXNUb1VwbG9hZDogICAgICAgICAgICdzZXQtZmlsZXMtdG8tdXBsb2FkJyxcbiAgICBjbGVhclVwbG9hZDogICAgICAgICAgICAgICAgJ2NsZWFyLXVwbG9hZCcsXG4gICAgZXhlY3V0ZUNsaWVudEZ1bmN0aW9uOiAgICAgICdleGVjdXRlLWNsaWVudC1mdW5jdGlvbicsXG4gICAgZXhlY3V0ZVNlbGVjdG9yOiAgICAgICAgICAgICdleGVjdXRlLXNlbGVjdG9yJyxcbiAgICB0YWtlU2NyZWVuc2hvdDogICAgICAgICAgICAgJ3Rha2Utc2NyZWVuc2hvdCcsXG4gICAgdGFrZUVsZW1lbnRTY3JlZW5zaG90OiAgICAgICd0YWtlLWVsZW1lbnQtc2NyZWVuc2hvdCcsXG4gICAgdGFrZVNjcmVlbnNob3RPbkZhaWw6ICAgICAgICd0YWtlLXNjcmVlbnNob3Qtb24tZmFpbCcsXG4gICAgcHJlcGFyZUJyb3dzZXJNYW5pcHVsYXRpb246ICdwcmVwYXJlLWJyb3dzZXItbWFuaXB1bGF0aW9uJyxcbiAgICBzaG93QXNzZXJ0aW9uUmV0cmllc1N0YXR1czogJ3Nob3ctYXNzZXJ0aW9uLXJldHJpZXMtc3RhdHVzJyxcbiAgICBoaWRlQXNzZXJ0aW9uUmV0cmllc1N0YXR1czogJ2hpZGUtYXNzZXJ0aW9uLXJldHJpZXMtc3RhdHVzJyxcbiAgICBzZXRCcmVha3BvaW50OiAgICAgICAgICAgICAgJ3NldC1icmVha3BvaW50JyxcbiAgICByZXNpemVXaW5kb3c6ICAgICAgICAgICAgICAgJ3Jlc2l6ZS13aW5kb3cnLFxuICAgIHJlc2l6ZVdpbmRvd1RvRml0RGV2aWNlOiAgICAncmVzaXplLXdpbmRvdy10by1maXQtZGV2aWNlJyxcbiAgICBtYXhpbWl6ZVdpbmRvdzogICAgICAgICAgICAgJ21heGltaXplLXdpbmRvdycsXG4gICAgc3dpdGNoVG9JZnJhbWU6ICAgICAgICAgICAgICdzd2l0Y2gtdG8taWZyYW1lJyxcbiAgICBzd2l0Y2hUb01haW5XaW5kb3c6ICAgICAgICAgJ3N3aXRjaC10by1tYWluLXdpbmRvdycsXG4gICAgc2V0TmF0aXZlRGlhbG9nSGFuZGxlcjogICAgICdzZXQtbmF0aXZlLWRpYWxvZy1oYW5kbGVyJyxcbiAgICBnZXROYXRpdmVEaWFsb2dIaXN0b3J5OiAgICAgJ2dldC1uYXRpdmUtZGlhbG9nLWhpc3RvcnknLFxuICAgIGdldEJyb3dzZXJDb25zb2xlTWVzc2FnZXM6ICAnZ2V0LWJyb3dzZXItY29uc29sZS1tZXNzYWdlcycsXG4gICAgc2V0VGVzdFNwZWVkOiAgICAgICAgICAgICAgICdzZXQtdGVzdC1zcGVlZCcsXG4gICAgc2V0UGFnZUxvYWRUaW1lb3V0OiAgICAgICAgICdzZXQtcGFnZS1sb2FkLXRpbWVvdXQnLFxuICAgIGRlYnVnOiAgICAgICAgICAgICAgICAgICAgICAnZGVidWcnLFxuICAgIGFzc2VydGlvbjogICAgICAgICAgICAgICAgICAnYXNzZXJ0aW9uJyxcbiAgICB1c2VSb2xlOiAgICAgICAgICAgICAgICAgICAgJ3VzZVJvbGUnLFxuICAgIHRlc3REb25lOiAgICAgICAgICAgICAgICAgICAndGVzdC1kb25lJyxcbiAgICBiYWNrdXBTdG9yYWdlczogICAgICAgICAgICAgJ2JhY2t1cC1zdG9yYWdlcycsXG4gICAgZXhlY3V0ZUV4cHJlc3Npb246ICAgICAgICAgICdleGVjdXRlLWV4cHJlc3Npb24nLFxuICAgIGV4ZWN1dGVBc3luY0V4cHJlc3Npb246ICAgICAnZXhlY3V0ZS1hc3luYy1leHByZXNzaW9uJyxcbiAgICB1bmxvY2tQYWdlOiAgICAgICAgICAgICAgICAgJ3VubG9jay1wYWdlJyxcbiAgICByZWNvcmRlcjogICAgICAgICAgICAgICAgICAgJ3JlY29yZGVyJ1xufTtcbiJdfQ==