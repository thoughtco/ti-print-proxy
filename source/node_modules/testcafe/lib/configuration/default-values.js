"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TYPESCRIPT_BLACKLISTED_OPTIONS = exports.TYPESCRIPT_COMPILER_NON_OVERRIDABLE_OPTIONS = exports.DEFAULT_TYPESCRIPT_COMPILER_OPTIONS = exports.DEFAULT_RETRY_TEST_PAGES = exports.DEFAULT_DEVELOPMENT_MODE = exports.DEFAULT_SOURCE_DIRECTORIES = exports.DEFAULT_CONCURRENCY_VALUE = exports.DEFAULT_APP_INIT_DELAY = exports.STATIC_CONTENT_CACHING_SETTINGS = exports.DEFAULT_SPEED_VALUE = exports.DEFAULT_TIMEOUT = void 0;
exports.DEFAULT_TIMEOUT = {
    selector: 10000,
    assertion: 3000,
    pageLoad: 3000
};
exports.DEFAULT_SPEED_VALUE = 1;
exports.STATIC_CONTENT_CACHING_SETTINGS = {
    maxAge: 3600,
    mustRevalidate: false
};
exports.DEFAULT_APP_INIT_DELAY = 1000;
exports.DEFAULT_CONCURRENCY_VALUE = 1;
exports.DEFAULT_SOURCE_DIRECTORIES = ['tests', 'test'];
exports.DEFAULT_DEVELOPMENT_MODE = false;
exports.DEFAULT_RETRY_TEST_PAGES = false;
exports.DEFAULT_TYPESCRIPT_COMPILER_OPTIONS = {
    experimentalDecorators: true,
    emitDecoratorMetadata: true,
    allowJs: true,
    pretty: true,
    inlineSourceMap: true,
    noImplicitAny: false,
    module: 1 /* ts.ModuleKind.CommonJS */,
    moduleResolution: 2 /* ts.ModuleResolutionKind.Node */,
    target: 3 /* ts.ScriptTarget.ES2016 */,
    jsx: 2 /* ts.JsxEmit.React */,
    suppressOutputPathCheck: true,
    skipLibCheck: true
};
exports.TYPESCRIPT_COMPILER_NON_OVERRIDABLE_OPTIONS = ['module', 'moduleResolution', 'target'];
exports.TYPESCRIPT_BLACKLISTED_OPTIONS = [
    'incremental',
    'tsBuildInfoFile',
    'emitDeclarationOnly',
    'declarationMap',
    'declarationDir',
    'composite',
    'outFile',
    'out'
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC12YWx1ZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY29uZmlndXJhdGlvbi9kZWZhdWx0LXZhbHVlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFYSxRQUFBLGVBQWUsR0FBRztJQUMzQixRQUFRLEVBQUcsS0FBSztJQUNoQixTQUFTLEVBQUUsSUFBSTtJQUNmLFFBQVEsRUFBRyxJQUFJO0NBQ2xCLENBQUM7QUFFVyxRQUFBLG1CQUFtQixHQUFHLENBQUMsQ0FBQztBQUV4QixRQUFBLCtCQUErQixHQUFnQztJQUN4RSxNQUFNLEVBQVUsSUFBSTtJQUNwQixjQUFjLEVBQUUsS0FBSztDQUN4QixDQUFDO0FBRVcsUUFBQSxzQkFBc0IsR0FBRyxJQUFJLENBQUM7QUFFOUIsUUFBQSx5QkFBeUIsR0FBRyxDQUFDLENBQUM7QUFFOUIsUUFBQSwwQkFBMEIsR0FBRyxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQztBQUUvQyxRQUFBLHdCQUF3QixHQUFHLEtBQUssQ0FBQztBQUNqQyxRQUFBLHdCQUF3QixHQUFHLEtBQUssQ0FBQztBQUVqQyxRQUFBLG1DQUFtQyxHQUFpQztJQUM3RSxzQkFBc0IsRUFBRyxJQUFJO0lBQzdCLHFCQUFxQixFQUFJLElBQUk7SUFDN0IsT0FBTyxFQUFrQixJQUFJO0lBQzdCLE1BQU0sRUFBbUIsSUFBSTtJQUM3QixlQUFlLEVBQVUsSUFBSTtJQUM3QixhQUFhLEVBQVksS0FBSztJQUM5QixNQUFNLEVBQW1CLENBQUMsQ0FBQyw0QkFBNEI7SUFDdkQsZ0JBQWdCLEVBQVMsQ0FBQyxDQUFDLGtDQUFrQztJQUM3RCxNQUFNLEVBQW1CLENBQUMsQ0FBQyw0QkFBNEI7SUFDdkQsR0FBRyxFQUFzQixDQUFDLENBQUMsc0JBQXNCO0lBQ2pELHVCQUF1QixFQUFFLElBQUk7SUFDN0IsWUFBWSxFQUFhLElBQUk7Q0FDaEMsQ0FBQztBQUVXLFFBQUEsMkNBQTJDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsa0JBQWtCLEVBQUUsUUFBUSxDQUFDLENBQUM7QUFFdkYsUUFBQSw4QkFBOEIsR0FBRztJQUMxQyxhQUFhO0lBQ2IsaUJBQWlCO0lBQ2pCLHFCQUFxQjtJQUNyQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLFdBQVc7SUFDWCxTQUFTO0lBQ1QsS0FBSztDQUNSLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaWN0aW9uYXJ5LCBTdGF0aWNDb250ZW50Q2FjaGluZ09wdGlvbnMgfSBmcm9tICcuL2ludGVyZmFjZXMnO1xuXG5leHBvcnQgY29uc3QgREVGQVVMVF9USU1FT1VUID0ge1xuICAgIHNlbGVjdG9yOiAgMTAwMDAsXG4gICAgYXNzZXJ0aW9uOiAzMDAwLFxuICAgIHBhZ2VMb2FkOiAgMzAwMFxufTtcblxuZXhwb3J0IGNvbnN0IERFRkFVTFRfU1BFRURfVkFMVUUgPSAxO1xuXG5leHBvcnQgY29uc3QgU1RBVElDX0NPTlRFTlRfQ0FDSElOR19TRVRUSU5HUzogU3RhdGljQ29udGVudENhY2hpbmdPcHRpb25zID0ge1xuICAgIG1heEFnZTogICAgICAgICAzNjAwLFxuICAgIG11c3RSZXZhbGlkYXRlOiBmYWxzZVxufTtcblxuZXhwb3J0IGNvbnN0IERFRkFVTFRfQVBQX0lOSVRfREVMQVkgPSAxMDAwO1xuXG5leHBvcnQgY29uc3QgREVGQVVMVF9DT05DVVJSRU5DWV9WQUxVRSA9IDE7XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX1NPVVJDRV9ESVJFQ1RPUklFUyA9IFsndGVzdHMnLCAndGVzdCddO1xuXG5leHBvcnQgY29uc3QgREVGQVVMVF9ERVZFTE9QTUVOVF9NT0RFID0gZmFsc2U7XG5leHBvcnQgY29uc3QgREVGQVVMVF9SRVRSWV9URVNUX1BBR0VTID0gZmFsc2U7XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX1RZUEVTQ1JJUFRfQ09NUElMRVJfT1BUSU9OUzogRGljdGlvbmFyeTxib29sZWFuIHwgbnVtYmVyPiA9IHtcbiAgICBleHBlcmltZW50YWxEZWNvcmF0b3JzOiAgdHJ1ZSxcbiAgICBlbWl0RGVjb3JhdG9yTWV0YWRhdGE6ICAgdHJ1ZSxcbiAgICBhbGxvd0pzOiAgICAgICAgICAgICAgICAgdHJ1ZSxcbiAgICBwcmV0dHk6ICAgICAgICAgICAgICAgICAgdHJ1ZSxcbiAgICBpbmxpbmVTb3VyY2VNYXA6ICAgICAgICAgdHJ1ZSxcbiAgICBub0ltcGxpY2l0QW55OiAgICAgICAgICAgZmFsc2UsXG4gICAgbW9kdWxlOiAgICAgICAgICAgICAgICAgIDEgLyogdHMuTW9kdWxlS2luZC5Db21tb25KUyAqLyxcbiAgICBtb2R1bGVSZXNvbHV0aW9uOiAgICAgICAgMiAvKiB0cy5Nb2R1bGVSZXNvbHV0aW9uS2luZC5Ob2RlICovLFxuICAgIHRhcmdldDogICAgICAgICAgICAgICAgICAzIC8qIHRzLlNjcmlwdFRhcmdldC5FUzIwMTYgKi8sXG4gICAganN4OiAgICAgICAgICAgICAgICAgICAgIDIgLyogdHMuSnN4RW1pdC5SZWFjdCAqLyxcbiAgICBzdXBwcmVzc091dHB1dFBhdGhDaGVjazogdHJ1ZSxcbiAgICBza2lwTGliQ2hlY2s6ICAgICAgICAgICAgdHJ1ZVxufTtcblxuZXhwb3J0IGNvbnN0IFRZUEVTQ1JJUFRfQ09NUElMRVJfTk9OX09WRVJSSURBQkxFX09QVElPTlMgPSBbJ21vZHVsZScsICdtb2R1bGVSZXNvbHV0aW9uJywgJ3RhcmdldCddO1xuXG5leHBvcnQgY29uc3QgVFlQRVNDUklQVF9CTEFDS0xJU1RFRF9PUFRJT05TID0gW1xuICAgICdpbmNyZW1lbnRhbCcsXG4gICAgJ3RzQnVpbGRJbmZvRmlsZScsXG4gICAgJ2VtaXREZWNsYXJhdGlvbk9ubHknLFxuICAgICdkZWNsYXJhdGlvbk1hcCcsXG4gICAgJ2RlY2xhcmF0aW9uRGlyJyxcbiAgICAnY29tcG9zaXRlJyxcbiAgICAnb3V0RmlsZScsXG4gICAgJ291dCdcbl07XG4iXX0=