"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const recorder_1 = __importDefault(require("./recorder"));
class Videos {
    constructor(browserJobs, { videoPath, videoOptions, videoEncodingOptions }, warningLog, timeStamp) {
        const options = Object.assign({ timeStamp: timeStamp }, videoOptions);
        this.testVideoInfos = {};
        browserJobs.forEach(browserJob => {
            const recorder = this._createVideoRecorder(browserJob, videoPath, options, videoEncodingOptions, warningLog);
            recorder.on('test-run-video-saved', args => this._addTestRunVideoInfo(args));
        });
    }
    getTestVideos(testId) {
        const testVideoInfo = this.testVideoInfos[testId];
        return testVideoInfo ? testVideoInfo.recordings : [];
    }
    _createVideoRecorder(browserJob, videoPath, options, videoEncodingOptions, warningLog) {
        return new recorder_1.default(browserJob, videoPath, options, videoEncodingOptions, warningLog);
    }
    _addTestRunVideoInfo({ testRun, videoPath, singleFile }) {
        const testId = testRun.test.id;
        let testVideo = this.testVideoInfos[testId];
        if (!testVideo) {
            testVideo = { recordings: [] };
            this.testVideoInfos[testId] = testVideo;
        }
        testVideo.recordings.push({
            testRunId: testRun.id,
            videoPath,
            singleFile
        });
    }
}
exports.default = Videos;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlkZW9zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3ZpZGVvLXJlY29yZGVyL3ZpZGVvcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLDBEQUF1QztBQU12QyxNQUFxQixNQUFNO0lBR3ZCLFlBQ0ksV0FBeUIsRUFBRSxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsb0JBQW9CLEVBQWdCLEVBQUUsVUFBc0IsRUFBRSxTQUFrQjtRQUN0SSxNQUFNLE9BQU8sbUJBQUssU0FBUyxFQUFFLFNBQVMsSUFBSyxZQUFZLENBQUUsQ0FBQztRQUUxRCxJQUFJLENBQUMsY0FBYyxHQUFHLEVBQUUsQ0FBQztRQUV6QixXQUFXLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxFQUFFO1lBQzdCLE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxVQUFVLEVBQUUsU0FBUyxFQUFFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxVQUFVLENBQUMsQ0FBQztZQUU3RyxRQUFRLENBQUMsRUFBRSxDQUFDLHNCQUFzQixFQUFFLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLG9CQUFvQixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDakYsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRU0sYUFBYSxDQUFFLE1BQWM7UUFDaEMsTUFBTSxhQUFhLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUVsRCxPQUFPLGFBQWEsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0lBQ3pELENBQUM7SUFFTyxvQkFBb0IsQ0FBRSxVQUFtQixFQUFFLFNBQWlCLEVBQUUsT0FBZ0IsRUFBRSxvQkFBNkIsRUFBRSxVQUFzQjtRQUN6SSxPQUFPLElBQUksa0JBQWEsQ0FBQyxVQUFVLEVBQUUsU0FBUyxFQUFFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxVQUFVLENBQUMsQ0FBQztJQUMvRixDQUFDO0lBRU8sb0JBQW9CLENBQUUsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBOEI7UUFDeEYsTUFBTSxNQUFNLEdBQW1CLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDO1FBQy9DLElBQUksU0FBUyxHQUFrQixJQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRTNELElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDWixTQUFTLEdBQUcsRUFBRSxVQUFVLEVBQUUsRUFBRSxFQUFFLENBQUM7WUFFL0IsSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsR0FBRyxTQUFTLENBQUM7U0FDM0M7UUFFRCxTQUFTLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQztZQUN0QixTQUFTLEVBQUUsT0FBTyxDQUFDLEVBQUU7WUFDckIsU0FBUztZQUNULFVBQVU7U0FDYixDQUFDLENBQUM7SUFDUCxDQUFDO0NBQ0o7QUExQ0QseUJBMENDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFZpZGVvUmVjb3JkZXIgZnJvbSAnLi9yZWNvcmRlcic7XG5pbXBvcnQgQnJvd3NlckpvYiBmcm9tICcuLi9ydW5uZXIvYnJvd3Nlci1qb2InO1xuaW1wb3J0IHsgRGljdGlvbmFyeSB9IGZyb20gJy4uL2NvbmZpZ3VyYXRpb24vaW50ZXJmYWNlcyc7XG5pbXBvcnQgV2FybmluZ0xvZyBmcm9tICcuLi9ub3RpZmljYXRpb25zL3dhcm5pbmctbG9nJztcbmltcG9ydCB7IFZpZGVvT3B0aW9ucywgVGVzdFZpZGVvSW5mbywgVGVzdFJ1blZpZGVvSW5mbywgVGVzdFJ1blZpZGVvU2F2ZWRFdmVudEFyZ3MgfSBmcm9tICcuL2ludGVyZmFjZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBWaWRlb3Mge1xuICAgIHB1YmxpYyB0ZXN0VmlkZW9JbmZvczogRGljdGlvbmFyeTxUZXN0VmlkZW9JbmZvPjtcblxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvciAoXG4gICAgICAgIGJyb3dzZXJKb2JzOiBCcm93c2VySm9iW10sIHsgdmlkZW9QYXRoLCB2aWRlb09wdGlvbnMsIHZpZGVvRW5jb2RpbmdPcHRpb25zIH06IFZpZGVvT3B0aW9ucywgd2FybmluZ0xvZzogV2FybmluZ0xvZywgdGltZVN0YW1wOiB1bmtub3duKSB7XG4gICAgICAgIGNvbnN0IG9wdGlvbnMgPSB7IHRpbWVTdGFtcDogdGltZVN0YW1wLCAuLi52aWRlb09wdGlvbnMgfTtcblxuICAgICAgICB0aGlzLnRlc3RWaWRlb0luZm9zID0ge307XG5cbiAgICAgICAgYnJvd3NlckpvYnMuZm9yRWFjaChicm93c2VySm9iID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHJlY29yZGVyID0gdGhpcy5fY3JlYXRlVmlkZW9SZWNvcmRlcihicm93c2VySm9iLCB2aWRlb1BhdGgsIG9wdGlvbnMsIHZpZGVvRW5jb2RpbmdPcHRpb25zLCB3YXJuaW5nTG9nKTtcblxuICAgICAgICAgICAgcmVjb3JkZXIub24oJ3Rlc3QtcnVuLXZpZGVvLXNhdmVkJywgYXJncyA9PiB0aGlzLl9hZGRUZXN0UnVuVmlkZW9JbmZvKGFyZ3MpKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHVibGljIGdldFRlc3RWaWRlb3MgKHRlc3RJZDogc3RyaW5nKTogVGVzdFJ1blZpZGVvSW5mb1tdIHtcbiAgICAgICAgY29uc3QgdGVzdFZpZGVvSW5mbyA9IHRoaXMudGVzdFZpZGVvSW5mb3NbdGVzdElkXTtcblxuICAgICAgICByZXR1cm4gdGVzdFZpZGVvSW5mbyA/IHRlc3RWaWRlb0luZm8ucmVjb3JkaW5ncyA6IFtdO1xuICAgIH1cblxuICAgIHByaXZhdGUgX2NyZWF0ZVZpZGVvUmVjb3JkZXIgKGJyb3dzZXJKb2I6IHVua25vd24sIHZpZGVvUGF0aDogc3RyaW5nLCBvcHRpb25zOiB1bmtub3duLCB2aWRlb0VuY29kaW5nT3B0aW9uczogdW5rbm93biwgd2FybmluZ0xvZzogV2FybmluZ0xvZyk6IFZpZGVvUmVjb3JkZXIge1xuICAgICAgICByZXR1cm4gbmV3IFZpZGVvUmVjb3JkZXIoYnJvd3NlckpvYiwgdmlkZW9QYXRoLCBvcHRpb25zLCB2aWRlb0VuY29kaW5nT3B0aW9ucywgd2FybmluZ0xvZyk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBfYWRkVGVzdFJ1blZpZGVvSW5mbyAoeyB0ZXN0UnVuLCB2aWRlb1BhdGgsIHNpbmdsZUZpbGUgfTogVGVzdFJ1blZpZGVvU2F2ZWRFdmVudEFyZ3MpOiB2b2lkIHtcbiAgICAgICAgY29uc3QgdGVzdElkOiBzdHJpbmcgICAgICAgICA9IHRlc3RSdW4udGVzdC5pZDtcbiAgICAgICAgbGV0IHRlc3RWaWRlbzogVGVzdFZpZGVvSW5mbyA9IHRoaXMudGVzdFZpZGVvSW5mb3NbdGVzdElkXTtcblxuICAgICAgICBpZiAoIXRlc3RWaWRlbykge1xuICAgICAgICAgICAgdGVzdFZpZGVvID0geyByZWNvcmRpbmdzOiBbXSB9O1xuXG4gICAgICAgICAgICB0aGlzLnRlc3RWaWRlb0luZm9zW3Rlc3RJZF0gPSB0ZXN0VmlkZW87XG4gICAgICAgIH1cblxuICAgICAgICB0ZXN0VmlkZW8ucmVjb3JkaW5ncy5wdXNoKHtcbiAgICAgICAgICAgIHRlc3RSdW5JZDogdGVzdFJ1bi5pZCxcbiAgICAgICAgICAgIHZpZGVvUGF0aCxcbiAgICAgICAgICAgIHNpbmdsZUZpbGVcbiAgICAgICAgfSk7XG4gICAgfVxufVxuIl19